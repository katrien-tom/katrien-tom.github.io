<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>自签名证书 on 半夜酒的博客</title><link>https://blog.binggao.xyz/tags/%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</link><description>Recent content in 自签名证书 on 半夜酒的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>半夜酒</copyright><lastBuildDate>Thu, 12 Dec 2024 08:00:00 +0800</lastBuildDate><atom:link href="https://blog.binggao.xyz/tags/%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>群晖安装密码库Vaultwarden</title><link>https://blog.binggao.xyz/p/synology-vaultwarden/</link><pubDate>Thu, 12 Dec 2024 08:00:00 +0800</pubDate><guid>https://blog.binggao.xyz/p/synology-vaultwarden/</guid><description>&lt;img src="https://blog.binggao.xyz/img/synology.jpg" alt="Featured image of post 群晖安装密码库Vaultwarden" />&lt;h1 id="群晖安装密码库vaultwarden">
&lt;a href="#%e7%be%a4%e6%99%96%e5%ae%89%e8%a3%85%e5%af%86%e7%a0%81%e5%ba%93vaultwarden">#&lt;/a>
群晖安装密码库Vaultwarden
&lt;/h1>&lt;h1 id="一安装">
&lt;a href="#%e4%b8%80%e5%ae%89%e8%a3%85">#&lt;/a>
一、安装
&lt;/h1>&lt;p>打开群晖的【Container Manager】或者是【Docker】，搜索vaultwarden，选择第一个vaultwarden/server镜像进行下载&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211203492.png"
width="1372"
height="786"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211203492_hub7d13479bdbae2d0d48ff6b8876dd8d4_188839_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211203492_hub7d13479bdbae2d0d48ff6b8876dd8d4_188839_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211203492"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;p>在等待下载过程中，先创建好 vaultwarden 数据存放的目录。在File Station里的docker中创建好 vaultwarden 文件夹，并在里面新建data文件夹 。其实这里在根目录新建vaultwarden 文件夹或在其他文件夹里建vaultwarden都不影响。看各位喜好。名称不用vaultwarden也可以。&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211334137.png"
width="1421"
height="731"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211334137_hu95f1311565f6cc31baec77def515424a_283633_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211334137_hu95f1311565f6cc31baec77def515424a_283633_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211334137"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="466px"
>&lt;/p>
&lt;p>回到Container Manager或者Docker套件，运行刚刚下载好的vaultwarden镜像，启用自动重新启动打勾。每次重启群晖后不用手动启动容器里项目。&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211439118.png"
width="834"
height="602"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211439118_hu9826840047e7e95b90e7a12efbce4e3f_119428_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211439118_hu9826840047e7e95b90e7a12efbce4e3f_119428_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211439118"
class="gallery-image"
data-flex-grow="138"
data-flex-basis="332px"
>&lt;/p>
&lt;p>点击下一步&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211516488.png"
width="1221"
height="722"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211516488_hu2c3a2fa9331f3edd8093108362878567_78973_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211516488_hu2c3a2fa9331f3edd8093108362878567_78973_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211516488"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="405px"
>&lt;/p>
&lt;p>点击添加文件夹。选择你刚才新建的 vaultwarden 文件夹下的data文件夹。&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211558951.png"
width="1442"
height="753"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211558951_hu4e10518198af7a72a80abf2d950b2656_260117_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211558951_hu4e10518198af7a72a80abf2d950b2656_260117_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211558951"
class="gallery-image"
data-flex-grow="191"
data-flex-basis="459px"
>&lt;/p>
&lt;p>在后面的红框里输入 /data&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211631061.png"
width="799"
height="177"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211631061_hud8cfa739a81a55a8fb80eb4101ad627a_68259_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20241211211631061_hud8cfa739a81a55a8fb80eb4101ad627a_68259_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20241211211631061"
class="gallery-image"
data-flex-grow="451"
data-flex-basis="1083px"
>&lt;/p>
&lt;p>其他都不要改动。点击下一步。点完成。&lt;/p>
&lt;p>现在可以通过群晖IP地址加刚刚的端口访问你的密码库了。因为Bitwarden限制，不能使http登陆Bitwarden密码库。所以要设置反向代理通过https访问。&lt;/p>
&lt;h1 id="二设置">
&lt;a href="#%e4%ba%8c%e8%ae%be%e7%bd%ae">#&lt;/a>
二、设置
&lt;/h1>&lt;p>停止容器，然后点击&lt;code>编辑&lt;/code>，然后点击&lt;code>高级设置&lt;/code>&lt;/p>
&lt;p>往下拉找到环境，点新增。
&lt;strong>禁用密码提示&lt;/strong>添加环境变量 SHOW_PASSWORD_HINT=false
&lt;strong>禁用web管理页面&lt;/strong>添加环境变量 WEB_VAULT_ENABLED=false
&lt;strong>禁用新用户注册&lt;/strong>添加环境变量 SIGNUPS_ALLOWED=false
&lt;strong>禁用邀请&lt;/strong>添加环境变量 INVITATIONS_ALLOWED=false
&lt;strong>启用日志记录&lt;/strong>添加环境变量 LOG_FILE=/data/bitwarden.log
&lt;strong>开启随机路径&lt;/strong>添加环境变量 DOMAIN=https://二级域名:端口(cloudflare支持的端口)/随机路径
日志级别默认为 “info”，可以参考 &lt;a class="link" href="https://github.com/dani-garcia/bitwarden_rs/wiki/Logging" target="_blank" rel="noopener"
>bitwarden_rs wiki&lt;/a> 更改日志级别。&lt;/p>
&lt;p>如果想要开启&lt;strong>管理页面&lt;/strong>添加环境变量:ADMIN_TOKEN=token str&lt;/p>
&lt;p>环境变量添加完成点击保存，点击右上角的启动。&lt;/p>
&lt;h1 id="三cloudflare设置">
&lt;a href="#%e4%b8%89cloudflare%e8%ae%be%e7%bd%ae">#&lt;/a>
三、Cloudflare设置
&lt;/h1>&lt;blockquote>
&lt;p>去掉端口访问&lt;/p>
&lt;/blockquote>
&lt;p>进入相应的域名页面，点击左侧&lt;code>规则&lt;/code>,然后点击&lt;code>Create rule&lt;/code>,选择&lt;code>产品选项卡&lt;/code>创建&lt;code>Origin Rules&lt;/code>规则，填写名称后选择&lt;code>自定义筛选表达式&lt;/code>,字段：主机名、运算符：等于、值：对应的二级域名。目标端口（必须是Cloudflare支持的端口）例TLS端口：443、2083、8443等，放置位置-》选择顺序为&lt;code>第一个&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Cloudflare中WAF安全设置&lt;/p>
&lt;/blockquote>
&lt;p>点击右侧&lt;code>安全性&lt;/code>，点击&lt;code>WAF&lt;/code>，自定义规则（选择区域锁定模板）-》&lt;code>创建规则&lt;/code>设置以下内容:&lt;/p>
&lt;p>&lt;img src="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20250120210759626.png"
width="2070"
height="1029"
srcset="https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20250120210759626_hu02f54c3d5c4b958793626ce4382fe480_63559_480x0_resize_box_3.png 480w, https://blog.binggao.xyz/p/synology-vaultwarden/assets/image-20250120210759626_hu02f54c3d5c4b958793626ce4382fe480_63559_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image-20250120210759626"
class="gallery-image"
data-flex-grow="201"
data-flex-basis="482px"
>&lt;/p>
&lt;p>点击&lt;code>管理列表&lt;/code>设置白名单&lt;/p></description></item><item><title>Nginx生成自签名证书</title><link>https://blog.binggao.xyz/p/nginx-openssl-self-signed-certificate/</link><pubDate>Thu, 09 May 2024 17:00:00 +0800</pubDate><guid>https://blog.binggao.xyz/p/nginx-openssl-self-signed-certificate/</guid><description>&lt;img src="https://blog.binggao.xyz/img/nginx.jpg" alt="Featured image of post Nginx生成自签名证书" />&lt;h1 id="nginx生成自签名证书">
&lt;a href="#nginx%e7%94%9f%e6%88%90%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6">#&lt;/a>
Nginx生成自签名证书
&lt;/h1>&lt;h1 id="一生成根证书私钥和根证书">
&lt;a href="#%e4%b8%80%e7%94%9f%e6%88%90%e6%a0%b9%e8%af%81%e4%b9%a6%e7%a7%81%e9%92%a5%e5%92%8c%e6%a0%b9%e8%af%81%e4%b9%a6">#&lt;/a>
一、生成根证书私钥和根证书
&lt;/h1>&lt;blockquote>
&lt;p>使用指定-subj “/C=CN/ST=MyProvince/L=MyCity/O=MyOrganization”,生成根证书私钥和根证书&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl req -x509 -nodes -days &lt;span class="m">36500&lt;/span> -newkey rsa:2048 -subj &lt;span class="s2">&amp;#34;/C=CN/ST=beijing/L=beijing/O=MyOrganization&amp;#34;&lt;/span> -keyout CA-private.key -out CA-certificate.crt -reqexts v3_req -extensions v3_ca
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="二生成自签名证书私钥">
&lt;a href="#%e4%ba%8c%e7%94%9f%e6%88%90%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%a7%81%e9%92%a5">#&lt;/a>
二、生成自签名证书私钥
&lt;/h1>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl genrsa -out private.key &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="三根据自签名证书私钥生成自签名证书申请文件">
&lt;a href="#%e4%b8%89%e6%a0%b9%e6%8d%ae%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%a7%81%e9%92%a5%e7%94%9f%e6%88%90%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%94%b3%e8%af%b7%e6%96%87%e4%bb%b6">#&lt;/a>
三、根据自签名证书私钥生成自签名证书申请文件
&lt;/h1>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl req -new -key private.key -subj &lt;span class="s2">&amp;#34;/C=CN/ST=beijing/L=beijing/O=MyOrganization/CN=192.168.60.68&amp;#34;&lt;/span> -sha256 -out private.csr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="四定义自签名证书扩展文件解决chrome安全告警">
&lt;a href="#%e5%9b%9b%e5%ae%9a%e4%b9%89%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e6%89%a9%e5%b1%95%e6%96%87%e4%bb%b6%e8%a7%a3%e5%86%b3chrome%e5%ae%89%e5%85%a8%e5%91%8a%e8%ad%a6">#&lt;/a>
四、定义自签名证书扩展文件(解决chrome安全告警)
&lt;/h1>&lt;p>​ 定义自签名证书扩展文件(解决Chrome安全告警)。在默认情况下生成的证书一旦选择信任，在 Edge, Firefox 等浏览器都显示为安全，但是Chrome仍然会标记为不安全并警告拦截，这是因为 Chrome 需要证书支持扩展 Subject Alternative Name, 因此生成时需要特别指定 MyExt 扩展并添加相关参数,将下述内容放到一个文件中,命名为private.ext&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; private.ext &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[ req ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">default_bits = 1024
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">distinguished_name = req_distinguished_name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">req_extensions = MyExt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">extensions = MyExt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[ req_distinguished_name ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">countryName = CN
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">stateOrProvinceName = BeiJing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">localityName = BeiJing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">organizationName = MyOrganization
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[MyExt]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">authorityKeyIdentifier=keyid,issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">basicConstraints=CA:FALSE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">subjectAltName = IP:192.168.60.68
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="五生成自签名证书">
&lt;a href="#%e4%ba%94%e7%94%9f%e6%88%90%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6">#&lt;/a>
五、生成自签名证书
&lt;/h1>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##设置100年的证书有效期&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl x509 -req -days &lt;span class="m">36500&lt;/span> -in private.csr -CA CA-certificate.crt -CAkey CA-private.key -CAcreateserial -sha256 -out private.crt -extfile private.ext -extensions MyExt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="六配置nginx">
&lt;a href="#%e5%85%ad%e9%85%8d%e7%bd%aenginx">#&lt;/a>
六、配置Nginx
&lt;/h1>&lt;p>将上面生成的private.crt和private.key放在nginx下的ssl目录&lt;/p>
&lt;h1 id="七客户端安装根证书">
&lt;a href="#%e4%b8%83%e5%ae%a2%e6%88%b7%e7%ab%af%e5%ae%89%e8%a3%85%e6%a0%b9%e8%af%81%e4%b9%a6">#&lt;/a>
七、客户端安装根证书
&lt;/h1>&lt;p>把该证书CA-certificate.crt安装到受信任的根证书颁发机构下&lt;/p></description></item><item><title>Docker安装密码管理器Vaultwarden</title><link>https://blog.binggao.xyz/p/docker-vaultwarden/</link><pubDate>Wed, 08 May 2024 17:00:00 +0800</pubDate><guid>https://blog.binggao.xyz/p/docker-vaultwarden/</guid><description>&lt;img src="https://blog.binggao.xyz/img/docker.jpg" alt="Featured image of post Docker安装密码管理器Vaultwarden" />&lt;h1 id="一docker安装密码管理器vaultwarden">
&lt;a href="#%e4%b8%80docker%e5%ae%89%e8%a3%85%e5%af%86%e7%a0%81%e7%ae%a1%e7%90%86%e5%99%a8vaultwarden">#&lt;/a>
一、Docker安装密码管理器Vaultwarden
&lt;/h1>&lt;h2 id="11-创建专用网络">
&lt;a href="#11-%e5%88%9b%e5%bb%ba%e4%b8%93%e7%94%a8%e7%bd%91%e7%bb%9c">#&lt;/a>
1.1 创建专用网络
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker network create middleware
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="12-准备工作">
&lt;a href="#12-%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c">#&lt;/a>
1.2 准备工作
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir mydata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p mydata/vaultwarden/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p mydata/nginx/conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p mydata/nginx/ssl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="13-安装vaultwarden">
&lt;a href="#13-%e5%ae%89%e8%a3%85vaultwarden">#&lt;/a>
1.3 安装vaultwarden
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --name vaultwarden &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">INVITATIONS_ALLOWED&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">ADMIN_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>token123456 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">TZ&lt;/span>&lt;span class="o">=&lt;/span>Asia/Shanghai &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 8001:80 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --network middleware &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /mydata/vaultwarden/data:/data/ &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --log-driver json-file &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --log-opt max-size&lt;span class="o">=&lt;/span>200k &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --log-opt max-file&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> vaultwarden/server:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="131-关闭新注册">
&lt;a href="#131-%e5%85%b3%e9%97%ad%e6%96%b0%e6%b3%a8%e5%86%8c">#&lt;/a>
1.3.1 关闭新注册
&lt;/h3>&lt;pre>&lt;code>注册完管理员账号后进入/admin，将`Allow new signups`选项设置为false。
&lt;/code>&lt;/pre>
&lt;h2 id="14-安装nginx">
&lt;a href="#14-%e5%ae%89%e8%a3%85nginx">#&lt;/a>
1.4 安装nginx
&lt;/h2>&lt;h3 id="141-生成自签名证书">
&lt;a href="#141-%e7%94%9f%e6%88%90%e8%87%aa%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6">#&lt;/a>
1.4.1 生成自签名证书
&lt;/h3>&lt;ol>
&lt;li>生成根证书私钥和根证书&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>使用指定-subj “/C=CN/ST=MyProvince/L=MyCity/O=MyOrganization”,生成根证书私钥和根证书&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl req -x509 -nodes -days &lt;span class="m">36500&lt;/span> -newkey rsa:2048 -subj &lt;span class="s2">&amp;#34;/C=CN/ST=beijing/L=beijing/O=MyOrganization&amp;#34;&lt;/span> -keyout CA-private.key -out CA-certificate.crt -reqexts v3_req -extensions v3_ca
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>生成自签名证书私钥&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl genrsa -out private.key &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>根据自签名证书私钥生成自签名证书申请文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openssl req -new -key private.key -subj &lt;span class="s2">&amp;#34;/C=CN/ST=beijing/L=beijing/O=MyOrganization/CN=192.168.60.68&amp;#34;&lt;/span> -sha256 -out private.csr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>定义自签名证书扩展文件(解决Chrome安全告警)&lt;/li>
&lt;/ol>
&lt;p>​ 定义自签名证书扩展文件(解决Chrome安全告警)。在默认情况下生成的证书一旦选择信任，在 Edge, Firefox 等浏览器都显示为安全，但是Chrome仍然会标记为不安全并警告拦截，这是因为 Chrome 需要证书支持扩展 Subject Alternative Name, 因此生成时需要特别指定 MyExt 扩展并添加相关参数,将下述内容放到一个文件中,命名为private.ext&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; private.ext &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[ req ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">default_bits = 1024
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">distinguished_name = req_distinguished_name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">req_extensions = MyExt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">extensions = MyExt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[ req_distinguished_name ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">countryName = CN
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">stateOrProvinceName = BeiJing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">localityName = BeiJing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">organizationName = MyOrganization
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[MyExt]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">authorityKeyIdentifier=keyid,issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">basicConstraints=CA:FALSE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">subjectAltName = IP:192.168.60.68
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>生成自签名证书&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##设置100年的证书有效期&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl x509 -req -days &lt;span class="m">36500&lt;/span> -in private.csr -CA CA-certificate.crt -CAkey CA-private.key -CAcreateserial -sha256 -out private.crt -extfile private.ext -extensions MyExt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>配置Nginx&lt;/li>
&lt;/ol>
&lt;p>​ 将上面生成的private.crt和private.key放在nginx下的ssl目录&lt;/p>
&lt;ol start="7">
&lt;li>客户端安装根证书&lt;/li>
&lt;/ol>
&lt;p>​ 把该证书CA-certificate.crt安装到受信任的根证书颁发机构下&lt;/p>
&lt;h3 id="142-创建配置文件">
&lt;a href="#142-%e5%88%9b%e5%bb%ba%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">#&lt;/a>
1.4.2 创建配置文件
&lt;/h3>&lt;ol>
&lt;li>打开配置文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">vim /mydata/nginx/conf/nginx.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>输入以下内容&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">worker_processes 1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">events &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> worker_connections 1024&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">http &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> include mime.types&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> default_type application/octet-stream&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sendfile on&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> keepalive_timeout 65&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 80&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name localhost&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root html&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index index.html index.htm&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#error_page 404 /404.html;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># redirect server error pages to the static page /50x.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> error_page &lt;span class="m">500&lt;/span> &lt;span class="m">502&lt;/span> &lt;span class="m">503&lt;/span> &lt;span class="m">504&lt;/span> /50x.html&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">location&lt;/span> &lt;span class="o">=&lt;/span> /50x.html &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root html&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen &lt;span class="m">443&lt;/span> ssl&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># server_name your_domain.com; # 替换为你的域名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate /etc/ssl/certs/certificate.pem&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate_key /etc/ssl/certs/private-key.pem&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_protocols TLSv1.2 TLSv1.3&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://vaultwarden:80&lt;span class="p">;&lt;/span> &lt;span class="c1"># Vaultwarden的地址和端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Host &lt;span class="nv">$host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Real-IP &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-For &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-Proto &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="143-运行nginx">
&lt;a href="#143-%e8%bf%90%e8%a1%8cnginx">#&lt;/a>
1.4.3 运行nginx
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d --name nginx &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --network middleware &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /mydata/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /mydata/nginx/ssl:/etc/ssl/certs &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 8080:80 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 8081:443 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> nginx:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>